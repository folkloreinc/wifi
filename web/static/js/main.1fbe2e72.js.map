{"version":3,"file":"static/js/main.1fbe2e72.js","mappings":"mwBAQA,IAAMA,EAAY,CACdC,SAAUC,IAAAA,QACNA,IAAAA,MAAgB,CACZC,KAAMD,IAAAA,UAGdE,UAAWF,IAAAA,QAQf,SAASG,EAAT,GAA+C,IAAxBJ,EAAuB,EAAvBA,SAAUG,EAAa,EAAbA,UACvBE,GAAQC,EAAAA,EAAAA,UACV,kBACIN,EAASO,QACL,SAACC,EAAD,OAAUN,EAAV,EAAUA,KAAV,OAA+C,IAAzBM,EAAMC,QAAQP,GAAd,kBAAiCM,GAAjC,CAAwCN,IAAQM,CAAtE,GACA,GAHR,GAKA,CAACR,IAECU,GAAgBC,EAAAA,EAAAA,cAAY,qBAAGC,cAAkCC,KAArC,GAA4C,IAC9E,GAAqCC,EAAAA,EAAAA,GAAQ,CACzCC,OAAQ,CAAC,OAAQ,YACjBC,OAAQ,WACRC,aAAcZ,EAAMa,OAAS,EAAIb,EAAM,GAAK,KAC5CK,cAAAA,IAJIK,EAAR,EAAQA,OAAQI,EAAhB,EAAgBA,SAAUC,EAA1B,EAA0BA,OAM1B,OACI,kBACIjB,UAAWkB,IAAW,CCvCN,iCDuCM,UAGblB,EAA0B,OAAdA,KAGrBa,OAAO,WACPM,OAAO,OACPH,SAAUA,EATd,WAWI,iBAAKhB,UAAU,OAAf,WACI,kBAAOA,UAAU,aAAaoB,QAAQ,OAAtC,qBAGA,uBACIC,KAAK,OACLrB,UAAU,+BACVsB,UAAQ,GACJV,EAAOb,MAJf,aAMKG,EAAMqB,KAAI,SAACxB,GAAD,OACP,mBAAQW,MAAOX,EAAf,SAAsBA,GADf,WAKnB,iBAAKC,UAAU,OAAf,WACI,kBAAOA,UAAU,aAAaoB,QAAQ,WAAtC,2BAGA,oBACII,KAAK,OACLH,KAAK,WACLrB,UAAU,+BACVsB,UAAQ,GACJV,EAAOa,eAGnB,0BACI,mBAAQD,KAAK,SAASxB,UAAU,yBAAyB0B,SAAqB,YAAXT,EAAnE,8BAMf,CAEDhB,EAAYL,UAAYA,EACxBK,EAAY0B,aAtES,CACjB9B,SAAU,GACVG,UAAW,MAsEf,QEjFMJ,EAAY,CACdC,SAAUC,IAAAA,QACNA,IAAAA,MAAgB,CACZC,KAAMD,IAAAA,UAGd8B,OAAQ9B,IAAAA,MAQZ,SAAS+B,EAAT,GAAoC,IAArBD,EAAoB,EAApBA,OAAQ/B,EAAY,EAAZA,SACnB,GACIA,EAASiC,MAAK,oBAAGC,UAAH,yBAAyC,CAAC,GADpDhC,KAAMiC,OAAd,MAAiC,KAAjC,EAEA,OACI,gBAAKhC,UCzBe,uBDyBpB,UACI,iBAAKA,UAAU,YAAf,UACK4B,GACG,gBAAK5B,UAAU,kCAAf,UACI,gBAAKA,UAAU,QAAf,UACI,gBAAKA,UAAU,uBAAf,UACI,gBAAKA,UAAU,6BAAf,UACI,iBAAKA,UAAU,mBAAf,WACI,cAAGA,UAAU,yBADjB,uBAEegC,aAM/B,MACJ,gBAAKhC,UAAU,kCAAf,UACI,gBAAKA,UAAU,QAAf,UACI,gBAAKA,UAAU,OAAf,UACI,iBAAKA,UAAU,YAAf,UACK4B,GAAS,eAAI5B,UAAU,OAAd,gCAA+C,MACzD,SAAC,EAAD,CAAaH,SAAUA,iBAQtD,CAEDgC,EAAIjC,UAAYA,EAChBiC,EAAIF,aAzCiB,CACjB9B,SAAU,GACV+B,QAAQ,GAyCZ,QEvDMK,EAAMC,EAAAA,cAAoBL,EAAKM,OAAOC,OAAS,CAAC,GACtDC,EAAAA,OAAgBJ,EAAKK,SAASC,eAAe,O","sources":["web/components/ConnectForm.jsx","webpack://wifi/./src/web/styles/connect-form.module.scss?46a5","web/components/App.jsx","webpack://wifi/./src/web/styles/app.module.scss?7a67","web/index.js"],"sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control, react/jsx-props-no-spreading */\nimport { useForm } from '@folklore/forms';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useMemo, useCallback } from 'react';\n\nimport styles from '../styles/connect-form.module.scss';\n\nconst propTypes = {\n    networks: PropTypes.arrayOf(\n        PropTypes.shape({\n            ssid: PropTypes.string,\n        }),\n    ),\n    className: PropTypes.string,\n};\n\nconst defaultProps = {\n    networks: [],\n    className: null,\n};\n\nfunction ConnectForm({ networks, className }) {\n    const ssids = useMemo(\n        () =>\n            networks.reduce(\n                (names, { ssid }) => (names.indexOf(ssid) === -1 ? [...names, ssid] : names),\n                [],\n            ),\n        [networks],\n    );\n    const getFieldValue = useCallback(({ currentTarget }) => currentTarget.value, []);\n    const { fields, onSubmit, status } = useForm({\n        fields: ['ssid', 'password'],\n        action: '/connect',\n        initialValue: ssids.length > 0 ? ssids[0] : null,\n        getFieldValue,\n    });\n    return (\n        <form\n            className={classNames([\n                styles.container,\n                {\n                    [className]: className !== null,\n                },\n            ])}\n            action=\"/connect\"\n            method=\"post\"\n            onSubmit={onSubmit}\n        >\n            <div className=\"mb-3\">\n                <label className=\"form-label\" htmlFor=\"ssid\">\n                    Réseau\n                </label>\n                <select\n                    name=\"ssid\"\n                    className=\"form-control form-control-lg\"\n                    required\n                    {...fields.ssid}\n                >\n                    {ssids.map((ssid) => (\n                        <option value={ssid}>{ssid}</option>\n                    ))}\n                </select>\n            </div>\n            <div className=\"mb-4\">\n                <label className=\"form-label\" htmlFor=\"password\">\n                    Mot de passe\n                </label>\n                <input\n                    type=\"text\"\n                    name=\"password\"\n                    className=\"form-control form-control-lg\"\n                    required\n                    {...fields.password}\n                />\n            </div>\n            <div>\n                <button type=\"submit\" className=\"btn btn-lg btn-primary\" disabled={status === 'loading'}>\n                    Se connecter\n                </button>\n            </div>\n        </form>\n    );\n}\n\nConnectForm.propTypes = propTypes;\nConnectForm.defaultProps = defaultProps;\n\nexport default ConnectForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"connect-form_container__3nE9K\"};","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport ConnectForm from './ConnectForm';\n\nimport styles from '../styles/app.module.scss';\nimport '../styles/styles.scss';\n\nconst propTypes = {\n    networks: PropTypes.arrayOf(\n        PropTypes.shape({\n            ssid: PropTypes.string,\n        }),\n    ),\n    online: PropTypes.bool,\n};\n\nconst defaultProps = {\n    networks: [],\n    online: true,\n};\n\nfunction App({ online, networks }) {\n    const { ssid: connectedNetwork = null } =\n        networks.find(({ connected = false }) => connected) || {};\n    return (\n        <div className={styles.container}>\n            <div className=\"container\">\n                {online ? (\n                    <div className=\"row justify-content-center mt-4\">\n                        <div className=\"col-6\">\n                            <div className=\"card text-bg-success\">\n                                <div className=\"card-body  text-center p-4\">\n                                    <div className=\"h4 m-4 text-bold\">\n                                        <i className=\"bi bi-hand-thumbs-up\" /> Connecté\n                                        au réseau {connectedNetwork}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ) : null}\n                <div className=\"row justify-content-center mt-4\">\n                    <div className=\"col-6\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                {online ? <h4 className=\"mb-4\">Modifier le réseau</h4> : null}\n                                <ConnectForm networks={networks} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nApp.propTypes = propTypes;\nApp.defaultProps = defaultProps;\n\nexport default App;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"app_container__2sKL5\"};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nconst app = React.createElement(App, window.props || {});\nReactDOM.render(app, document.getElementById('app'));\n"],"names":["propTypes","networks","PropTypes","ssid","className","ConnectForm","ssids","useMemo","reduce","names","indexOf","getFieldValue","useCallback","currentTarget","value","useForm","fields","action","initialValue","length","onSubmit","status","classNames","method","htmlFor","name","required","map","type","password","disabled","defaultProps","online","App","find","connected","connectedNetwork","app","React","window","props","ReactDOM","document","getElementById"],"sourceRoot":""}